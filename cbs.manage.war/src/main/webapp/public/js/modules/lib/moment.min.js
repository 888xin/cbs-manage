define(function(require, exports, module) {
	var am  = (function(l) {
		var am, B = "2.5.1",
			o = this,
			az = Math.round,
			aH, ad = 0,
			Q = 1,
			aC = 2,
			ab = 3,
			D = 4,
			u = 5,
			ah = 6,
			y = {},
			aw = {
				_isAMomentObject: null,
				_i: null,
				_f: null,
				_l: null,
				_strict: null,
				_isUTC: null,
				_offset: null,
				_pf: null,
				_lang: null
			},
			x = (typeof module !== "undefined" && module.exports && typeof require !== "undefined"),
			P = /^\/?Date\((\-?\d+)/i,
			j = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,
			aP = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,
			H = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,
			aV = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,
			L = /\d\d?/,
			aU = /\d{1,3}/,
			aZ = /\d{1,4}/,
			t = /[+\-]?\d{1,6}/,
			b = /\d+/,
			a3 = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
			V = /Z|[\+\-]\d\d:?\d\d/gi,
			X = /T/i,
			aF = /[\+\-]?\d+(\.\d{1,3})?/,
			aW = /\d/,
			C = /\d\d/,
			h = /\d{3}/,
			aD = /\d{4}/,
			aS = /[+-]?\d{6}/,
			at = /[+-]?\d+/,
			ar = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
			ac = "YYYY-MM-DDTHH:mm:ssZ",
			f = [
				["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/],
				["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/],
				["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/],
				["GGGG-[W]WW", /\d{4}-W\d{2}/],
				["YYYY-DDD", /\d{4}-\d{3}/]
			],
			a1 = [
				["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d{1,3}/],
				["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
				["HH:mm", /(T| )\d\d:\d\d/],
				["HH", /(T| )\d\d/]
			],
			aX = /([\+\-]|\d\d)/gi,
			aQ = "Date|Hours|Minutes|Seconds|Milliseconds".split("|"),
			a0 = {
				Milliseconds: 1,
				Seconds: 1000,
				Minutes: 60000,
				Hours: 3600000,
				Days: 86400000,
				Months: 2592000000,
				Years: 31536000000
			},
			O = {
				ms: "millisecond",
				s: "second",
				m: "minute",
				h: "hour",
				d: "day",
				D: "date",
				w: "week",
				W: "isoWeek",
				M: "month",
				y: "year",
				DDD: "dayOfYear",
				e: "weekday",
				E: "isoWeekday",
				gg: "weekYear",
				GG: "isoWeekYear"
			},
			c = {
				dayofyear: "dayOfYear",
				isoweekday: "isoWeekday",
				isoweek: "isoWeek",
				weekyear: "weekYear",
				isoweekyear: "isoWeekYear"
			},
			aO = {},
			aE = "DDD w W M D d".split(" "),
			E = "M D H h m s w W".split(" "),
			aa = {
				M: function() {
					return this.month() + 1
				},
				MMM: function(i) {
					return this.lang().monthsShort(this, i)
				},
				MMMM: function(i) {
					return this.lang().months(this, i)
				},
				D: function() {
					return this.date()
				},
				DDD: function() {
					return this.dayOfYear()
				},
				d: function() {
					return this.day()
				},
				dd: function(i) {
					return this.lang().weekdaysMin(this, i)
				},
				ddd: function(i) {
					return this.lang().weekdaysShort(this, i)
				},
				dddd: function(i) {
					return this.lang().weekdays(this, i)
				},
				w: function() {
					return this.week()
				},
				W: function() {
					return this.isoWeek()
				},
				YY: function() {
					return d(this.year() % 100, 2)
				},
				YYYY: function() {
					return d(this.year(), 4)
				},
				YYYYY: function() {
					return d(this.year(), 5)
				},
				YYYYYY: function() {
					var i = this.year(),
						a4 = i >= 0 ? "+" : "-";
					return a4 + d(Math.abs(i), 6)
				},
				gg: function() {
					return d(this.weekYear() % 100, 2)
				},
				gggg: function() {
					return d(this.weekYear(), 4)
				},
				ggggg: function() {
					return d(this.weekYear(), 5)
				},
				GG: function() {
					return d(this.isoWeekYear() % 100, 2)
				},
				GGGG: function() {
					return d(this.isoWeekYear(), 4)
				},
				GGGGG: function() {
					return d(this.isoWeekYear(), 5)
				},
				e: function() {
					return this.weekday()
				},
				E: function() {
					return this.isoWeekday()
				},
				a: function() {
					return this.lang().meridiem(this.hours(), this.minutes(), true)
				},
				A: function() {
					return this.lang().meridiem(this.hours(), this.minutes(), false)
				},
				H: function() {
					return this.hours()
				},
				h: function() {
					return this.hours() % 12 || 12
				},
				m: function() {
					return this.minutes()
				},
				s: function() {
					return this.seconds()
				},
				S: function() {
					return an(this.milliseconds() / 100)
				},
				SS: function() {
					return d(an(this.milliseconds() / 10), 2)
				},
				SSS: function() {
					return d(this.milliseconds(), 3)
				},
				SSSS: function() {
					return d(this.milliseconds(), 3)
				},
				Z: function() {
					var i = -this.zone(),
						a4 = "+";
					if (i < 0) {
						i = -i;
						a4 = "-"
					}
					return a4 + d(an(i / 60), 2) + ":" + d(an(i) % 60, 2)
				},
				ZZ: function() {
					var i = -this.zone(),
						a4 = "+";
					if (i < 0) {
						i = -i;
						a4 = "-"
					}
					return a4 + d(an(i / 60), 2) + d(an(i) % 60, 2)
				},
				z: function() {
					return this.zoneAbbr()
				},
				zz: function() {
					return this.zoneName()
				},
				X: function() {
					return this.unix()
				},
				Q: function() {
					return this.quarter()
				}
			},
			ax = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"];

		function aI() {
			return {
				empty: false,
				unusedTokens: [],
				unusedInput: [],
				overflow: -2,
				charsLeftOver: 0,
				nullInput: false,
				invalidMonth: null,
				invalidFormat: false,
				userInvalidated: false,
				iso: false
			}
		}

		function aq(i, a4) {
			return function(a5) {
				return d(i.call(this, a5), a4)
			}
		}

		function R(a4, i) {
			return function(a5) {
				return this.lang().ordinal(a4.call(this, a5), i)
			}
		}
		while (aE.length) {
			aH = aE.pop();
			aa[aH + "o"] = R(aa[aH], aH)
		}
		while (E.length) {
			aH = E.pop();
			aa[aH + aH] = aq(aa[aH], 2)
		}
		aa.DDDD = aq(aa.DDD, 3);

		function aJ() {}

		function e(i) {
			aj(i);
			aN(this, i)
		}

		function aT(a5) {
			var a8 = S(a5),
				a6 = a8.year || 0,
				a7 = a8.month || 0,
				bc = a8.week || 0,
				bb = a8.day || 0,
				a9 = a8.hour || 0,
				a4 = a8.minute || 0,
				ba = a8.second || 0,
				i = a8.millisecond || 0;
			this._milliseconds = +i + ba * 1000 + a4 * 60000 + a9 * 3600000;
			this._days = +bb + bc * 7;
			this._months = +a7 + a6 * 12;
			this._data = {};
			this._bubble()
		}

		function aN(i, a5) {
			for (var a4 in a5) {
				if (a5.hasOwnProperty(a4)) {
					i[a4] = a5[a4]
				}
			}
			if (a5.hasOwnProperty("toString")) {
				i.toString = a5.toString
			}
			if (a5.hasOwnProperty("valueOf")) {
				i.valueOf = a5.valueOf
			}
			return i
		}

		function ag(a5) {
			var a4 = {},
				i;
			for (i in a5) {
				if (a5.hasOwnProperty(i) && aw.hasOwnProperty(i)) {
					a4[i] = a5[i]
				}
			}
			return a4
		}

		function T(i) {
			if (i < 0) {
				return Math.ceil(i)
			} else {
				return Math.floor(i)
			}
		}

		function d(a6, a5, a7) {
			var i = "" + Math.abs(a6),
				a4 = a6 >= 0;
			while (i.length < a5) {
				i = "0" + i
			}
			return (a4 ? (a7 ? "+" : "") : "-") + i
		}

		function g(a5, a6, bb, a7) {
			var i = a6._milliseconds,
				ba = a6._days,
				a8 = a6._months,
				a4, a9;
			if (i) {
				a5._d.setTime(+a5._d + i * bb)
			}
			if (ba || a8) {
				a4 = a5.minute();
				a9 = a5.hour()
			}
			if (ba) {
				a5.date(a5.date() + ba * bb)
			}
			if (a8) {
				a5.month(a5.month() + a8 * bb)
			}
			if (i && !a7) {
				am.updateOffset(a5)
			}
			if (ba || a8) {
				a5.minute(a4);
				a5.hour(a9)
			}
		}

		function M(i) {
			return Object.prototype.toString.call(i) === "[object Array]"
		}

		function N(i) {
			return Object.prototype.toString.call(i) === "[object Date]" || i instanceof Date
		}

		function aB(a7, a9, a8) {
			var a6 = Math.min(a7.length, a9.length),
				i = Math.abs(a7.length - a9.length),
				a5 = 0,
				a4;
			for (a4 = 0; a4 < a6; a4++) {
				if ((a8 && a7[a4] !== a9[a4]) || (!a8 && an(a7[a4]) !== an(a9[a4]))) {
					a5++
				}
			}
			return a5 + i
		}

		function av(i) {
			if (i) {
				var a4 = i.toLowerCase().replace(/(.)s$/, "$1");
				i = O[i] || c[a4] || a4
			}
			return i
		}

		function S(a6) {
			var a4 = {},
				a5, i;
			for (i in a6) {
				if (a6.hasOwnProperty(i)) {
					a5 = av(i);
					if (a5) {
						a4[a5] = a6[i]
					}
				}
			}
			return a4
		}

		function K(i) {
			var a4, a5;
			if (i.indexOf("week") === 0) {
				a4 = 7;
				a5 = "day"
			} else {
				if (i.indexOf("month") === 0) {
					a4 = 12;
					a5 = "month"
				} else {
					return
				}
			}
			am[i] = function(a7, a8) {
				var ba, bb, a6 = am.fn._lang[i],
					a9 = [];
				if (typeof a7 === "number") {
					a8 = a7;
					a7 = l
				}
				bb = function(bd) {
					var bc = am().utc().set(a5, bd);
					return a6.call(am.fn._lang, bc, a7 || "")
				};
				if (a8 != null) {
					return bb(a8)
				} else {
					for (ba = 0; ba < a4; ba++) {
						a9.push(bb(ba))
					}
					return a9
				}
			}
		}

		function an(a5) {
			var a4 = +a5,
				i = 0;
			if (a4 !== 0 && isFinite(a4)) {
				if (a4 >= 0) {
					i = Math.floor(a4)
				} else {
					i = Math.ceil(a4)
				}
			}
			return i
		}

		function k(a4, i) {
			return new Date(Date.UTC(a4, i + 1, 0)).getUTCDate()
		}

		function a(i) {
			return ao(i) ? 366 : 365
		}

		function ao(i) {
			return (i % 4 === 0 && i % 100 !== 0) || i % 400 === 0
		}

		function aj(a4) {
			var i;
			if (a4._a && a4._pf.overflow === -2) {
				i = a4._a[Q] < 0 || a4._a[Q] > 11 ? Q : a4._a[aC] < 1 || a4._a[aC] > k(a4._a[ad], a4._a[Q]) ? aC : a4._a[ab] < 0 || a4._a[ab] > 23 ? ab : a4._a[D] < 0 || a4._a[D] > 59 ? D : a4._a[u] < 0 || a4._a[u] > 59 ? u : a4._a[ah] < 0 || a4._a[ah] > 999 ? ah : -1;
				if (a4._pf._overflowDayOfYear && (i < ad || i > aC)) {
					i = aC
				}
				a4._pf.overflow = i
			}
		}

		function A(i) {
			if (i._isValid == null) {
				i._isValid = !isNaN(i._d.getTime()) && i._pf.overflow < 0 && !i._pf.empty && !i._pf.invalidMonth && !i._pf.nullInput && !i._pf.invalidFormat && !i._pf.userInvalidated;
				if (i._strict) {
					i._isValid = i._isValid && i._pf.charsLeftOver === 0 && i._pf.unusedTokens.length === 0
				}
			}
			return i._isValid
		}

		function m(i) {
			return i ? i.toLowerCase().replace("_", "-") : i
		}

		function s(a4, i) {
			return i._isUTC ? am(a4).zone(i._offset || 0) : am(a4).local()
		}
		aN(aJ.prototype, {
			set: function(i) {
				var a4, a5;
				for (a5 in i) {
					a4 = i[a5];
					if (typeof a4 === "function") {
						this[a5] = a4
					} else {
						this["_" + a5] = a4
					}
				}
			},
			_months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
			months: function(i) {
				return this._months[i.month()]
			},
			_monthsShort: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
			monthsShort: function(i) {
				return this._monthsShort[i.month()]
			},
			monthsParse: function(a4) {
				var a5, i, a6;
				if (!this._monthsParse) {
					this._monthsParse = []
				}
				for (a5 = 0; a5 < 12; a5++) {
					if (!this._monthsParse[a5]) {
						i = am.utc([2000, a5]);
						a6 = "^" + this.months(i, "") + "|^" + this.monthsShort(i, "");
						this._monthsParse[a5] = new RegExp(a6.replace(".", ""), "i")
					}
					if (this._monthsParse[a5].test(a4)) {
						return a5
					}
				}
			},
			_weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
			weekdays: function(i) {
				return this._weekdays[i.day()]
			},
			_weekdaysShort: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
			weekdaysShort: function(i) {
				return this._weekdaysShort[i.day()]
			},
			_weekdaysMin: "周日_周一_周二_周三_周四_周五_周六".split("_"),
			weekdaysMin: function(i) {
				return this._weekdaysMin[i.day()]
			},
			weekdaysParse: function(a5) {
				var a6, a4, i;
				if (!this._weekdaysParse) {
					this._weekdaysParse = []
				}
				for (a6 = 0; a6 < 7; a6++) {
					if (!this._weekdaysParse[a6]) {
						a4 = am([2000, 1]).day(a6);
						i = "^" + this.weekdays(a4, "") + "|^" + this.weekdaysShort(a4, "") + "|^" + this.weekdaysMin(a4, "");
						this._weekdaysParse[a6] = new RegExp(i.replace(".", ""), "i")
					}
					if (this._weekdaysParse[a6].test(a5)) {
						return a6
					}
				}
			},
			_longDateFormat: {
				LT: "h:mm A",
				L: "YYYY-MM-DD",
				LL: "MMMM D YYYY",
				LLL: "MMMM D YYYY LT",
				LLLL: "dddd, MMMM D YYYY LT"
			},
			longDateFormat: function(a4) {
				var i = this._longDateFormat[a4];
				if (!i && this._longDateFormat[a4.toUpperCase()]) {
					i = this._longDateFormat[a4.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(a5) {
						return a5.slice(1)
					});
					this._longDateFormat[a4] = i
				}
				return i
			},
			isPM: function(i) {
				return ((i + "").toLowerCase().charAt(0) === "p")
			},
			_meridiemParse: /[ap]\.?m?\.?/i,
			meridiem: function(a4, a5, i) {
				if (a4 > 11) {
					return i ? "pm" : "PM"
				} else {
					return i ? "am" : "AM"
				}
			},
			_calendar: {
				sameDay: "[Today at] LT",
				nextDay: "[Tomorrow at] LT",
				nextWeek: "dddd [at] LT",
				lastDay: "[Yesterday at] LT",
				lastWeek: "[Last] dddd [at] LT",
				sameElse: "L"
			},
			calendar: function(a4, i) {
				var a5 = this._calendar[a4];
				return typeof a5 === "function" ? a5.apply(i) : a5
			},
			_relativeTime: {
				future: "in %s",
				past: "%s ago",
				s: "a few seconds",
				m: "a minute",
				mm: "%d minutes",
				h: "an hour",
				hh: "%d hours",
				d: "a day",
				dd: "%d days",
				M: "a month",
				MM: "%d months",
				y: "a year",
				yy: "%d years"
			},
			relativeTime: function(a4, a7, a5, i) {
				var a6 = this._relativeTime[a5];
				return (typeof a6 === "function") ? a6(a4, a7, a5, i) : a6.replace(/%d/i, a4)
			},
			pastFuture: function(a5, a4) {
				var i = this._relativeTime[a5 > 0 ? "future" : "past"];
				return typeof i === "function" ? i(a4) : i.replace(/%s/i, a4)
			},
			ordinal: function(i) {
				return this._ordinal.replace("%d", i)
			},
			_ordinal: "%d",
			preparse: function(i) {
				return i
			},
			postformat: function(i) {
				return i
			},
			week: function(i) {
				return n(i, this._week.dow, this._week.doy).week
			},
			_week: {
				dow: 0,
				doy: 6
			},
			_invalidDate: "Invalid date",
			invalidDate: function() {
				return this._invalidDate
			}
		});

		function aL(a4, i) {
			i.abbr = a4;
			if (!y[a4]) {
				y[a4] = new aJ()
			}
			y[a4].set(i);
			return y[a4]
		}

		function aY(i) {
			delete y[i]
		}

		function z(i) {
			var a9 = 0,
				a7, a5, a4, a8, a6 = function(bb) {
					if (!y[bb] && x) {
						try {
							require("./lang/" + bb)
						} catch (ba) {}
					}
					return y[bb]
				};
			if (!i) {
				return am.fn._lang
			}
			if (!M(i)) {
				a5 = a6(i);
				if (a5) {
					return a5
				}
				i = [i]
			}
			while (a9 < i.length) {
				a8 = m(i[a9]).split("-");
				a7 = a8.length;
				a4 = m(i[a9 + 1]);
				a4 = a4 ? a4.split("-") : null;
				while (a7 > 0) {
					a5 = a6(a8.slice(0, a7).join("-"));
					if (a5) {
						return a5
					}
					if (a4 && a4.length >= a7 && aB(a8, a4, true) >= a7 - 1) {
						break
					}
					a7--
				}
				a9++
			}
			return am.fn._lang
		}

		function aK(i) {
			if (i.match(/\[[\s\S]/)) {
				return i.replace(/^\[|\]$/g, "")
			}
			return i.replace(/\\/g, "")
		}

		function W(a4) {
			var i = a4.match(H),
				a6, a5;
			for (a6 = 0, a5 = i.length; a6 < a5; a6++) {
				if (aa[i[a6]]) {
					i[a6] = aa[i[a6]]
				} else {
					i[a6] = aK(i[a6])
				}
			}
			return function(a7) {
				var a8 = "";
				for (a6 = 0; a6 < a5; a6++) {
					a8 += i[a6] instanceof Function ? i[a6].call(a7, a4) : i[a6]
				}
				return a8
			}
		}

		function F(a4, i) {
			if (!a4.isValid()) {
				return a4.lang().invalidDate()
			}
			i = af(i, a4.lang());
			if (!aO[i]) {
				aO[i] = W(i)
			}
			return aO[i](a4)
		}

		function af(a4, i) {
			var a5 = 5;

			function a6(a7) {
				return i.longDateFormat(a7) || a7
			}
			aV.lastIndex = 0;
			while (a5 >= 0 && aV.test(a4)) {
				a4 = a4.replace(aV, a6);
				aV.lastIndex = 0;
				a5 -= 1
			}
			return a4
		}

		function J(a6, a5) {
			var a4, i = a5._strict;
			switch (a6) {
				case "DDDD":
					return h;
				case "YYYY":
				case "GGGG":
				case "gggg":
					return i ? aD : aZ;
				case "Y":
				case "G":
				case "g":
					return at;
				case "YYYYYY":
				case "YYYYY":
				case "GGGGG":
				case "ggggg":
					return i ? aS : t;
				case "S":
					if (i) {
						return aW
					}
				case "SS":
					if (i) {
						return C
					}
				case "SSS":
					if (i) {
						return h
					}
				case "DDD":
					return aU;
				case "MMM":
				case "MMMM":
				case "dd":
				case "ddd":
				case "dddd":
					return a3;
				case "a":
				case "A":
					return z(a5._l)._meridiemParse;
				case "X":
					return aF;
				case "Z":
				case "ZZ":
					return V;
				case "T":
					return X;
				case "SSSS":
					return b;
				case "MM":
				case "DD":
				case "YY":
				case "GG":
				case "gg":
				case "HH":
				case "hh":
				case "mm":
				case "ss":
				case "ww":
				case "WW":
					return i ? C : L;
				case "M":
				case "D":
				case "d":
				case "H":
				case "h":
				case "m":
				case "s":
				case "w":
				case "W":
				case "e":
				case "E":
					return L;
				default:
					a4 = new RegExp(r(v(a6.replace("\\", "")), "i"));
					return a4
			}
		}

		function q(a5) {
			a5 = a5 || "";
			var a6 = (a5.match(V) || []),
				i = a6[a6.length - 1] || [],
				a7 = (i + "").match(aX) || ["-", 0, 0],
				a4 = +(a7[1] * 60) + an(a7[2]);
			return a7[0] === "+" ? -a4 : a4
		}

		function G(a7, a5, a6) {
			var a4, i = a6._a;
			switch (a7) {
				case "M":
				case "MM":
					if (a5 != null) {
						i[Q] = an(a5) - 1
					}
					break;
				case "MMM":
				case "MMMM":
					a4 = z(a6._l).monthsParse(a5);
					if (a4 != null) {
						i[Q] = a4
					} else {
						a6._pf.invalidMonth = a5
					}
					break;
				case "D":
				case "DD":
					if (a5 != null) {
						i[aC] = an(a5)
					}
					break;
				case "DDD":
				case "DDDD":
					if (a5 != null) {
						a6._dayOfYear = an(a5)
					}
					break;
				case "YY":
					i[ad] = an(a5) + (an(a5) > 68 ? 1900 : 2000);
					break;
				case "YYYY":
				case "YYYYY":
				case "YYYYYY":
					i[ad] = an(a5);
					break;
				case "a":
				case "A":
					a6._isPm = z(a6._l).isPM(a5);
					break;
				case "H":
				case "HH":
				case "h":
				case "hh":
					i[ab] = an(a5);
					break;
				case "m":
				case "mm":
					i[D] = an(a5);
					break;
				case "s":
				case "ss":
					i[u] = an(a5);
					break;
				case "S":
				case "SS":
				case "SSS":
				case "SSSS":
					i[ah] = an(("0." + a5) * 1000);
					break;
				case "X":
					a6._d = new Date(parseFloat(a5) * 1000);
					break;
				case "Z":
				case "ZZ":
					a6._useUTC = true;
					a6._tzm = q(a5);
					break;
				case "w":
				case "ww":
				case "W":
				case "WW":
				case "d":
				case "dd":
				case "ddd":
				case "dddd":
				case "e":
				case "E":
					a7 = a7.substr(0, 1);
				case "gg":
				case "gggg":
				case "GG":
				case "GGGG":
				case "GGGGG":
					a7 = a7.substr(0, 2);
					if (a5) {
						a6._w = a6._w || {};
						a6._w[a7] = a5
					}
					break
			}
		}

		function aR(a9) {
			var a8, a7, bc = [],
				a4, a6, bb, bd, be, a5, ba, i;
			if (a9._d) {
				return
			}
			a4 = U(a9);
			if (a9._w && a9._a[aC] == null && a9._a[Q] == null) {
				bb = function(bf) {
					var bg = parseInt(bf, 10);
					return bf ? (bf.length < 3 ? (bg > 68 ? 1900 + bg : 2000 + bg) : bg) : (a9._a[ad] == null ? am().weekYear() : a9._a[ad])
				};
				bd = a9._w;
				if (bd.GG != null || bd.W != null || bd.E != null) {
					be = Y(bb(bd.GG), bd.W || 1, bd.E, 4, 1)
				} else {
					a5 = z(a9._l);
					ba = bd.d != null ? ak(bd.d, a5) : (bd.e != null ? parseInt(bd.e, 10) + a5._week.dow : 0);
					i = parseInt(bd.w, 10) || 1;
					if (bd.d != null && ba < a5._week.dow) {
						i++
					}
					be = Y(bb(bd.gg), i, ba, a5._week.doy, a5._week.dow)
				}
				a9._a[ad] = be.year;
				a9._dayOfYear = be.dayOfYear
			}
			if (a9._dayOfYear) {
				a6 = a9._a[ad] == null ? a4[ad] : a9._a[ad];
				if (a9._dayOfYear > a(a6)) {
					a9._pf._overflowDayOfYear = true
				}
				a7 = a2(a6, 0, a9._dayOfYear);
				a9._a[Q] = a7.getUTCMonth();
				a9._a[aC] = a7.getUTCDate()
			}
			for (a8 = 0; a8 < 3 && a9._a[a8] == null; ++a8) {
				a9._a[a8] = bc[a8] = a4[a8]
			}
			for (; a8 < 7; a8++) {
				a9._a[a8] = bc[a8] = (a9._a[a8] == null) ? (a8 === 2 ? 1 : 0) : a9._a[a8]
			}
			bc[ab] += an((a9._tzm || 0) / 60);
			bc[D] += an((a9._tzm || 0) % 60);
			a9._d = (a9._useUTC ? a2 : I).apply(null, bc)
		}

		function aM(i) {
			var a4;
			if (i._d) {
				return
			}
			a4 = S(i._i);
			i._a = [a4.year, a4.month, a4.day, a4.hour, a4.minute, a4.second, a4.millisecond];
			aR(i)
		}

		function U(i) {
			var a4 = new Date();
			if (i._useUTC) {
				return [a4.getUTCFullYear(), a4.getUTCMonth(), a4.getUTCDate()]
			} else {
				return [a4.getFullYear(), a4.getMonth(), a4.getDate()]
			}
		}

		function al(a9) {
			a9._a = [];
			a9._pf.empty = true;
			var a5 = z(a9._l),
				a6 = "" + a9._i,
				a8, bb, i, a7, ba, bc = a6.length,
				a4 = 0;
			i = af(a9._f, a5).match(H) || [];
			for (a8 = 0; a8 < i.length; a8++) {
				a7 = i[a8];
				bb = (a6.match(J(a7, a9)) || [])[0];
				if (bb) {
					ba = a6.substr(0, a6.indexOf(bb));
					if (ba.length > 0) {
						a9._pf.unusedInput.push(ba)
					}
					a6 = a6.slice(a6.indexOf(bb) + bb.length);
					a4 += bb.length
				}
				if (aa[a7]) {
					if (bb) {
						a9._pf.empty = false
					} else {
						a9._pf.unusedTokens.push(a7)
					}
					G(a7, bb, a9)
				} else {
					if (a9._strict && !bb) {
						a9._pf.unusedTokens.push(a7)
					}
				}
			}
			a9._pf.charsLeftOver = bc - a4;
			if (a6.length > 0) {
				a9._pf.unusedInput.push(a6)
			}
			if (a9._isPm && a9._a[ab] < 12) {
				a9._a[ab] += 12
			}
			if (a9._isPm === false && a9._a[ab] === 12) {
				a9._a[ab] = 0
			}
			aR(a9);
			aj(a9)
		}

		function v(i) {
			return i.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(a5, a4, a8, a7, a6) {
				return a4 || a8 || a7 || a6
			})
		}

		function r(i) {
			return i.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
		}

		function ai(a6) {
			var i, a7, a8, a5, a4;
			if (a6._f.length === 0) {
				a6._pf.invalidFormat = true;
				a6._d = new Date(NaN);
				return
			}
			for (a5 = 0; a5 < a6._f.length; a5++) {
				a4 = 0;
				i = aN({}, a6);
				i._pf = aI();
				i._f = a6._f[a5];
				al(i);
				if (!A(i)) {
					continue
				}
				a4 += i._pf.charsLeftOver;
				a4 += i._pf.unusedTokens.length * 10;
				i._pf.score = a4;
				if (a8 == null || a4 < a8) {
					a8 = a4;
					a7 = i
				}
			}
			aN(a6, a7 || i)
		}

		function Z(a4) {
			var i, a5, a7 = a4._i,
				a6 = ar.exec(a7);
			if (a6) {
				a4._pf.iso = true;
				for (i = 0, a5 = f.length; i < a5; i++) {
					if (f[i][1].exec(a7)) {
						a4._f = f[i][0] + (a6[6] || " ");
						break
					}
				}
				for (i = 0, a5 = a1.length; i < a5; i++) {
					if (a1[i][1].exec(a7)) {
						a4._f += a1[i][0];
						break
					}
				}
				if (a7.match(V)) {
					a4._f += "Z"
				}
				al(a4)
			} else {
				a4._d = new Date(a7)
			}
		}

		function au(i) {
			var a5 = i._i,
				a4 = P.exec(a5);
			if (a5 === l) {
				i._d = new Date()
			} else {
				if (a4) {
					i._d = new Date(+a4[1])
				} else {
					if (typeof a5 === "string") {
						Z(i)
					} else {
						if (M(a5)) {
							i._a = a5.slice(0);
							aR(i)
						} else {
							if (N(a5)) {
								i._d = new Date(+a5)
							} else {
								if (typeof(a5) === "object") {
									aM(i)
								} else {
									i._d = new Date(a5)
								}
							}
						}
					}
				}
			}
		}

		function I(a5, i, ba, a9, a4, a8, a7) {
			var a6 = new Date(a5, i, ba, a9, a4, a8, a7);
			if (a5 < 1970) {
				a6.setFullYear(a5)
			}
			return a6
		}

		function a2(i) {
			var a4 = new Date(Date.UTC.apply(null, arguments));
			if (i < 1970) {
				a4.setUTCFullYear(i)
			}
			return a4
		}

		function ak(a4, i) {
			if (typeof a4 === "string") {
				if (!isNaN(a4)) {
					a4 = parseInt(a4, 10)
				} else {
					a4 = i.weekdaysParse(a4);
					if (typeof a4 !== "number") {
						return null
					}
				}
			}
			return a4
		}

		function aG(a5, a4, a6, i, a7) {
			return a7.relativeTime(a4 || 1, !!a6, a5, i)
		}

		function p(a4, bb, i) {
			var a9 = az(Math.abs(a4) / 1000),
				a5 = az(a9 / 60),
				a8 = az(a5 / 60),
				ba = az(a8 / 24),
				a6 = az(ba / 365),
				a7 = a9 < 45 && ["s", a9] || a5 === 1 && ["m"] || a5 < 45 && ["mm", a5] || a8 === 1 && ["h"] || a8 < 22 && ["hh", a8] || ba === 1 && ["d"] || ba <= 25 && ["dd", ba] || ba <= 45 && ["M"] || ba < 345 && ["MM", az(ba / 30)] || a6 === 1 && ["y"] || ["yy", a6];
			a7[2] = bb;
			a7[3] = a4 > 0;
			a7[4] = i;
			return aG.apply({}, a7)
		}

		function n(a7, a5, i) {
			var a4 = i - a5,
				a8 = i - a7.day(),
				a6;
			if (a8 > a4) {
				a8 -= 7
			}
			if (a8 < a4 - 7) {
				a8 += 7
			}
			a6 = am(a7).add("d", a8);
			return {
				week: Math.ceil(a6.dayOfYear() / 7),
				year: a6.year()
			}
		}

		function Y(a9, a8, ba, a5, i) {
			var a4 = a2(a9, 0, 1).getUTCDay(),
				a6, a7;
			ba = ba != null ? ba : i;
			a6 = i - a4 + (a4 > a5 ? 7 : 0) - (a4 < i ? 7 : 0);
			a7 = 7 * (a8 - 1) + (ba - i) + a6 + 1;
			return {
				year: a7 > 0 ? a9 : a9 - 1,
				dayOfYear: a7 > 0 ? a7 : a(a9 - 1) + a7
			}
		}

		function ap(a5) {
			var a4 = a5._i,
				i = a5._f;
			if (a4 === null) {
				return am.invalid({
					nullInput: true
				})
			}
			if (typeof a4 === "string") {
				a5._i = a4 = z().preparse(a4)
			}
			if (am.isMoment(a4)) {
				a5 = ag(a4);
				a5._d = new Date(+a4._d)
			} else {
				if (i) {
					if (M(i)) {
						ai(a5)
					} else {
						al(a5)
					}
				} else {
					au(a5)
				}
			}
			return new e(a5)
		}
		am = function(a4, i, a6, a5) {
			var a7;
			if (typeof(a6) === "boolean") {
				a5 = a6;
				a6 = l
			}
			a7 = {};
			a7._isAMomentObject = true;
			a7._i = a4;
			a7._f = i;
			a7._l = a6;
			a7._strict = a5;
			a7._isUTC = false;
			a7._pf = aI();
			return ap(a7)
		};
		am.utc = function(a4, i, a6, a5) {
			var a7;
			if (typeof(a6) === "boolean") {
				a5 = a6;
				a6 = l
			}
			a7 = {};
			a7._isAMomentObject = true;
			a7._useUTC = true;
			a7._isUTC = true;
			a7._l = a6;
			a7._i = a4;
			a7._f = i;
			a7._strict = a5;
			a7._pf = aI();
			return ap(a7).utc()
		};
		am.unix = function(i) {
			return am(i * 1000)
		};
		am.duration = function(a5, a9) {
			var i = a5,
				a8 = null,
				a4, a7, a6;
			if (am.isDuration(a5)) {
				i = {
					ms: a5._milliseconds,
					d: a5._days,
					M: a5._months
				}
			} else {
				if (typeof a5 === "number") {
					i = {};
					if (a9) {
						i[a9] = a5
					} else {
						i.milliseconds = a5
					}
				} else {
					if (!!(a8 = j.exec(a5))) {
						a4 = (a8[1] === "-") ? -1 : 1;
						i = {
							y: 0,
							d: an(a8[aC]) * a4,
							h: an(a8[ab]) * a4,
							m: an(a8[D]) * a4,
							s: an(a8[u]) * a4,
							ms: an(a8[ah]) * a4
						}
					} else {
						if (!!(a8 = aP.exec(a5))) {
							a4 = (a8[1] === "-") ? -1 : 1;
							a6 = function(bb) {
								var ba = bb && parseFloat(bb.replace(",", "."));
								return (isNaN(ba) ? 0 : ba) * a4
							};
							i = {
								y: a6(a8[2]),
								M: a6(a8[3]),
								d: a6(a8[4]),
								h: a6(a8[5]),
								m: a6(a8[6]),
								s: a6(a8[7]),
								w: a6(a8[8])
							}
						}
					}
				}
			}
			a7 = new aT(i);
			if (am.isDuration(a5) && a5.hasOwnProperty("_lang")) {
				a7._lang = a5._lang
			}
			return a7
		};
		am.version = B;
		am.defaultFormat = ac;
		am.updateOffset = function() {};
		am.lang = function(a4, a5) {
			var i;
			if (!a4) {
				return am.fn._lang._abbr
			}
			if (a5) {
				aL(m(a4), a5)
			} else {
				if (a5 === null) {
					aY(a4);
					a4 = "en"
				} else {
					if (!y[a4]) {
						z(a4)
					}
				}
			}
			i = am.duration.fn._lang = am.fn._lang = z(a4);
			return i._abbr
		};
		am.langData = function(i) {
			if (i && i._lang && i._lang._abbr) {
				i = i._lang._abbr
			}
			return z(i)
		};
		am.isMoment = function(i) {
			return i instanceof e || (i != null && i.hasOwnProperty("_isAMomentObject"))
		};
		am.isDuration = function(i) {
			return i instanceof aT
		};
		for (aH = ax.length - 1; aH >= 0; --aH) {
			K(ax[aH])
		}
		am.normalizeUnits = function(i) {
			return av(i)
		};
		am.invalid = function(i) {
			var a4 = am.utc(NaN);
			if (i != null) {
				aN(a4._pf, i)
			} else {
				a4._pf.userInvalidated = true
			}
			return a4
		};
		am.parseZone = function(i) {
			return am(i).parseZone()
		};
		aN(am.fn = e.prototype, {
			clone: function() {
				return am(this)
			},
			valueOf: function() {
				return +this._d + ((this._offset || 0) * 60000)
			},
			unix: function() {
				return Math.floor(+this / 1000)
			},
			toString: function() {
				return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
			},
			toDate: function() {
				return this._offset ? new Date(+this) : this._d
			},
			toISOString: function() {
				var i = am(this).utc();
				if (0 < i.year() && i.year() <= 9999) {
					return F(i, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
				} else {
					return F(i, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
				}
			},
			toArray: function() {
				var i = this;
				return [i.year(), i.month(), i.date(), i.hours(), i.minutes(), i.seconds(), i.milliseconds()]
			},
			isValid: function() {
				return A(this)
			},
			isDSTShifted: function() {
				if (this._a) {
					return this.isValid() && aB(this._a, (this._isUTC ? am.utc(this._a) : am(this._a)).toArray()) > 0
				}
				return false
			},
			parsingFlags: function() {
				return aN({}, this._pf)
			},
			invalidAt: function() {
				return this._pf.overflow
			},
			utc: function() {
				return this.zone(0)
			},
			local: function() {
				this.zone(0);
				this._isUTC = false;
				return this
			},
			format: function(i) {
				var a4 = F(this, i || am.defaultFormat);
				return this.lang().postformat(a4)
			},
			add: function(a4, i) {
				var a5;
				if (typeof a4 === "string") {
					a5 = am.duration(+i, a4)
				} else {
					a5 = am.duration(a4, i)
				}
				g(this, a5, 1);
				return this
			},
			subtract: function(a4, i) {
				var a5;
				if (typeof a4 === "string") {
					a5 = am.duration(+i, a4)
				} else {
					a5 = am.duration(a4, i)
				}
				g(this, a5, -1);
				return this
			},
			diff: function(a6, a5, a9) {
				var a8 = s(a6, this),
					i = (this.zone() - a8.zone()) * 60000,
					a4, a7;
				a5 = av(a5);
				if (a5 === "year" || a5 === "month") {
					a4 = (this.daysInMonth() + a8.daysInMonth()) * 43200000;
					a7 = ((this.year() - a8.year()) * 12) + (this.month() - a8.month());
					a7 += ((this - am(this).startOf("month")) - (a8 - am(a8).startOf("month"))) / a4;
					a7 -= ((this.zone() - am(this).startOf("month").zone()) - (a8.zone() - am(a8).startOf("month").zone())) * 60000 / a4;
					if (a5 === "year") {
						a7 = a7 / 12
					}
				} else {
					a4 = (this - a8);
					a7 = a5 === "second" ? a4 / 1000 : a5 === "minute" ? a4 / 60000 : a5 === "hour" ? a4 / 3600000 : a5 === "day" ? (a4 - i) / 86400000 : a5 === "week" ? (a4 - i) / 604800000 : a4
				}
				return a9 ? a7 : T(a7)
			},
			from: function(i, a4) {
				return am.duration(this.diff(i)).lang(this.lang()._abbr).humanize(!a4)
			},
			fromNow: function(i) {
				return this.from(am(), i)
			},
			calendar: function() {
				var a4 = s(am(), this).startOf("day"),
					a5 = this.diff(a4, "days", true),
					i = a5 < -6 ? "sameElse" : a5 < -1 ? "lastWeek" : a5 < 0 ? "lastDay" : a5 < 1 ? "sameDay" : a5 < 2 ? "nextDay" : a5 < 7 ? "nextWeek" : "sameElse";
				return this.format(this.lang().calendar(i, this))
			},
			isLeapYear: function() {
				return ao(this.year())
			},
			isDST: function() {
				return (this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone())
			},
			day: function(i) {
				var a4 = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
				if (i != null) {
					i = ak(i, this.lang());
					return this.add({
						d: i - a4
					})
				} else {
					return a4
				}
			},
			month: function(a4) {
				var a5 = this._isUTC ? "UTC" : "",
					i;
				if (a4 != null) {
					if (typeof a4 === "string") {
						a4 = this.lang().monthsParse(a4);
						if (typeof a4 !== "number") {
							return this
						}
					}
					i = this.date();
					this.date(1);
					this._d["set" + a5 + "Month"](a4);
					this.date(Math.min(i, this.daysInMonth()));
					am.updateOffset(this);
					return this
				} else {
					return this._d["get" + a5 + "Month"]()
				}
			},
			startOf: function(i) {
				i = av(i);
				switch (i) {
					case "year":
						this.month(0);
					case "month":
						this.date(1);
					case "week":
					case "isoWeek":
					case "day":
						this.hours(0);
					case "hour":
						this.minutes(0);
					case "minute":
						this.seconds(0);
					case "second":
						this.milliseconds(0)
				}
				if (i === "week") {
					this.weekday(0)
				} else {
					if (i === "isoWeek") {
						this.isoWeekday(1)
					}
				}
				return this
			},
			endOf: function(i) {
				i = av(i);
				return this.startOf(i).add((i === "isoWeek" ? "week" : i), 1).subtract("ms", 1)
			},
			isAfter: function(i, a4) {
				a4 = typeof a4 !== "undefined" ? a4 : "millisecond";
				return +this.clone().startOf(a4) > +am(i).startOf(a4)
			},
			isBefore: function(i, a4) {
				a4 = typeof a4 !== "undefined" ? a4 : "millisecond";
				return +this.clone().startOf(a4) < +am(i).startOf(a4)
			},
			isSame: function(i, a4) {
				a4 = a4 || "ms";
				return +this.clone().startOf(a4) === +s(i, this).startOf(a4)
			},
			min: function(i) {
				i = am.apply(null, arguments);
				return i < this ? this : i
			},
			max: function(i) {
				i = am.apply(null, arguments);
				return i > this ? this : i
			},
			zone: function(a4) {
				var i = this._offset || 0;
				if (a4 != null) {
					if (typeof a4 === "string") {
						a4 = q(a4)
					}
					if (Math.abs(a4) < 16) {
						a4 = a4 * 60
					}
					this._offset = a4;
					this._isUTC = true;
					if (i !== a4) {
						g(this, am.duration(i - a4, "m"), 1, true)
					}
				} else {
					return this._isUTC ? i : this._d.getTimezoneOffset()
				}
				return this
			},
			zoneAbbr: function() {
				return this._isUTC ? "UTC" : ""
			},
			zoneName: function() {
				return this._isUTC ? "Coordinated Universal Time" : ""
			},
			parseZone: function() {
				if (this._tzm) {
					this.zone(this._tzm)
				} else {
					if (typeof this._i === "string") {
						this.zone(this._i)
					}
				}
				return this
			},
			hasAlignedHourOffset: function(i) {
				if (!i) {
					i = 0
				} else {
					i = am(i).zone()
				}
				return (this.zone() - i) % 60 === 0
			},
			daysInMonth: function() {
				return k(this.year(), this.month())
			},
			dayOfYear: function(a4) {
				var i = az((am(this).startOf("day") - am(this).startOf("year")) / 86400000) + 1;
				return a4 == null ? i : this.add("d", (a4 - i))
			},
			quarter: function() {
				return Math.ceil((this.month() + 1) / 3)
			},
			weekYear: function(a4) {
				var i = n(this, this.lang()._week.dow, this.lang()._week.doy).year;
				return a4 == null ? i : this.add("y", (a4 - i))
			},
			isoWeekYear: function(a4) {
				var i = n(this, 1, 4).year;
				return a4 == null ? i : this.add("y", (a4 - i))
			},
			week: function(a4) {
				var i = this.lang().week(this);
				return a4 == null ? i : this.add("d", (a4 - i) * 7)
			},
			isoWeek: function(a4) {
				var i = n(this, 1, 4).week;
				return a4 == null ? i : this.add("d", (a4 - i) * 7)
			},
			weekday: function(a4) {
				var i = (this.day() + 7 - this.lang()._week.dow) % 7;
				return a4 == null ? i : this.add("d", a4 - i)
			},
			isoWeekday: function(i) {
				return i == null ? this.day() || 7 : this.day(this.day() % 7 ? i : i - 7)
			},
			get: function(i) {
				i = av(i);
				return this[i]()
			},
			set: function(a4, i) {
				a4 = av(a4);
				if (typeof this[a4] === "function") {
					this[a4](i)
				}
				return this
			},
			lang: function(i) {
				if (i === l) {
					return this._lang
				} else {
					this._lang = z(i);
					return this
				}
			}
		});

		function ay(a4, i) {
			am.fn[a4] = am.fn[a4 + "s"] = function(a5) {
				var a6 = this._isUTC ? "UTC" : "";
				if (a5 != null) {
					this._d["set" + a6 + i](a5);
					am.updateOffset(this);
					return this
				} else {
					return this._d["get" + a6 + i]()
				}
			}
		}
		for (aH = 0; aH < aQ.length; aH++) {
			ay(aQ[aH].toLowerCase().replace(/s$/, ""), aQ[aH])
		}
		ay("year", "FullYear");
		am.fn.days = am.fn.day;
		am.fn.months = am.fn.month;
		am.fn.weeks = am.fn.week;
		am.fn.isoWeeks = am.fn.isoWeek;
		am.fn.toJSON = am.fn.toISOString;
		aN(am.duration.fn = aT.prototype, {
			_bubble: function() {
				var a6 = this._milliseconds,
					a5 = this._days,
					ba = this._months,
					a9 = this._data,
					i, a8, a4, a7;
				a9.milliseconds = a6 % 1000;
				i = T(a6 / 1000);
				a9.seconds = i % 60;
				a8 = T(i / 60);
				a9.minutes = a8 % 60;
				a4 = T(a8 / 60);
				a9.hours = a4 % 24;
				a5 += T(a4 / 24);
				a9.days = a5 % 30;
				ba += T(a5 / 30);
				a9.months = ba % 12;
				a7 = T(ba / 12);
				a9.years = a7
			},
			weeks: function() {
				return T(this.days() / 7)
			},
			valueOf: function() {
				return this._milliseconds + this._days * 86400000 + (this._months % 12) * 2592000000 + an(this._months / 12) * 31536000000
			},
			humanize: function(i) {
				var a5 = +this,
					a4 = p(a5, !i, this.lang());
				if (i) {
					a4 = this.lang().pastFuture(a5, a4)
				}
				return this.lang().postformat(a4)
			},
			add: function(a4, i) {
				var a5 = am.duration(a4, i);
				this._milliseconds += a5._milliseconds;
				this._days += a5._days;
				this._months += a5._months;
				this._bubble();
				return this
			},
			subtract: function(a4, i) {
				var a5 = am.duration(a4, i);
				this._milliseconds -= a5._milliseconds;
				this._days -= a5._days;
				this._months -= a5._months;
				this._bubble();
				return this
			},
			get: function(i) {
				i = av(i);
				return this[i.toLowerCase() + "s"]()
			},
			as: function(i) {
				i = av(i);
				return this["as" + i.charAt(0).toUpperCase() + i.slice(1) + "s"]()
			},
			lang: am.fn.lang,
			toIsoString: function() {
				var a6 = Math.abs(this.years()),
					a7 = Math.abs(this.months()),
					i = Math.abs(this.days()),
					a4 = Math.abs(this.hours()),
					a5 = Math.abs(this.minutes()),
					a8 = Math.abs(this.seconds() + this.milliseconds() / 1000);
				if (!this.asSeconds()) {
					return "P0D"
				}
				return (this.asSeconds() < 0 ? "-" : "") + "P" + (a6 ? a6 + "Y" : "") + (a7 ? a7 + "M" : "") + (i ? i + "D" : "") + ((a4 || a5 || a8) ? "T" : "") + (a4 ? a4 + "H" : "") + (a5 ? a5 + "M" : "") + (a8 ? a8 + "S" : "")
			}
		});

		function aA(i) {
			am.duration.fn[i] = function() {
				return this._data[i]
			}
		}

		function w(i, a4) {
			am.duration.fn["as" + i] = function() {
				return +this / a4
			}
		}
		for (aH in a0) {
			if (a0.hasOwnProperty(aH)) {
				w(aH, a0[aH]);
				aA(aH.toLowerCase())
			}
		}
		w("Weeks", 604800000);
		am.duration.fn.asMonths = function() {
			return (+this - this.years() * 31536000000) / 2592000000 + this.years() * 12
		};
		am.lang("en", {
			ordinal: function(a5) {
				var a4 = a5 % 10,
					i = (an(a5 % 100 / 10) === 1) ? "th" : (a4 === 1) ? "st" : (a4 === 2) ? "nd" : (a4 === 3) ? "rd" : "th";
				return a5 + i
			}
		});

		function ae(a4) {
			var a5 = false,
				i = am;
			if (typeof ender !== "undefined") {
				return
			}
			if (a4) {
				o.moment = function() {
					if (!a5 && console && console.warn) {
						a5 = true;
						console.warn("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.")
					}
					return i.apply(null, arguments)
				};
				aN(o.moment, i)
			} else {
				o.moment = am
			}
		}
		if (x) {
			module.exports = am;
			ae(true)
		} else {
			if (typeof define === "function") {
				define("moment", function(a5, i, a4) {
					return am
				})
			} else {
				ae()
			}
		}
		return am;
	}).call(this);
	module.exports = am;
});