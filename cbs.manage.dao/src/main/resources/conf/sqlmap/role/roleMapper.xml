<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="role">

    <insert id="add" parameterType="com.cbs.manage.dto.role.Role">
        insert into
        role
        (rolename, password,resourceResKeys,registerTime)
        values
        (#{rolename}, #{password}, #{resourceResKeys}, #{registerTime})
    </insert>

    <select id="getSingleRole" parameterType="string" resultType="com.cbs.manage.dto.role.Role">
        select roleId, rolename, password, registerTime, lastLoginTime, status, resourceResKeys, description, path, phone
        from
        role
        where
        rolename = #{rolename} and status != 2
    </select>


    <select id="getAllRole"  resultType="com.cbs.manage.dto.role.Role">
        select roleId, rolename, password, registerTime, lastLoginTime, status, resourceResKeys, description, path, phone
        from
        role
        order by roleId desc
    </select>

    <update id="update" parameterType="Role">
        update role
        <set>
            <if test="rolename != null">
                rolename=#{rolename},
            </if>
            <if test="password != null">
                password=#{password},
            </if>
            <if test="registerTime != null">
                registerTime=#{registerTime},
            </if>
            <if test="lastLoginTime != null">
                lastLoginTime=#{lastLoginTime},
            </if>
            <if test="status != null">
                status=#{status},
            </if>
            <if test="resourceResKeys != null">
                resourceResKeys=#{resourceResKeys},
            </if>
            <if test="description != null">
                description=#{description},
            </if>
            <if test="path != null">
                path=#{path},
            </if>
            <if test="phone != null">
                phone=#{phone},
            </if>
        </set>
        where roleId=#{roleId}
    </update>

    <delete id="deleteById" parameterType="long">
        delete
	    from role
	    where roleId = #{id}
    </delete>


</mapper>